# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthenticatedResponse {
  expiresAt: String!
  token: String!
  user: UserDto!
}

input CreateUserDto {
  avatar: String
  email: String
  name: String!
  phone: String
  status: UserStatus!
  username: String!
}

input IntFilter {
  between: [Int!]
  contains: Int
  eq: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  ne: Int
  notBetween: [Int!]
  notContains: Int
  notIn: [Int!]
}

type Mutation {
  createUser(data: CreateUserDto!): UserDto!
  deleteUser(id: Int!): Boolean!
  updateUser(data: UpdateUserDto!, id: Int!): UserDto!
}

type Query {
  authenticate: AuthenticatedResponse!
  users(skip: Int, sort: [[String!]!], take: Int, where: UserWhere): [UserDto!]!
}

input StringFilter {
  between: [String!]
  contains: String
  eq: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  ne: String
  notBetween: [String!]
  notContains: String
  notIn: [String!]
}

input UpdateUserDto {
  avatar: String
  email: String
  name: String
  phone: String
  status: UserStatus
  username: String
}

type UserDto {
  avatar: String
  email: String
  id: Int!
  name: String!
  phone: String
  status: UserStatus!
  username: String!
}

enum UserStatus {
  active
  blocked
  inactive
}

input UserWhere {
  and: [UserWhere!]
  email: StringFilter
  id: IntFilter
  name: StringFilter
  or: [UserWhere!]
  phone: StringFilter
  status: StringFilter
  username: StringFilter
}